name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      CLOUDFLARE_ACCOUNT_ID:
        description: "Cloudflare Account ID"
        default: ""
        required: true
        type: string
      CLOUDFLARE_API_TOKEN:
        description: "Cloudflare API Token"
        default: ""
        required: true
        type: string

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install wrangler
        run: npm install -g wrangler

      - name: Verify Cloudflare API Token
        run: |
          echo "Verifying Cloudflare API Token..."
          wrangler whoami
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
          
      - name: Check and Create D1 Database
        run: |
          set -x
          DB_LIST=$(wrangler d1 list --json)
          DB_ID=$(echo $DB_LIST | jq -r '.[] | select(.name == "database-nolet") | .uuid')
      
          if [ -z "$DB_ID" ]; then
            CREATE_OUTPUT=$(wrangler d1 create database-nolet)
            DB_ID=$(echo "$CREATE_OUTPUT" | sed -n 's/.*"database_id": "\([a-f0-9-]*\)".*/\1/p')
          else
            echo "Found existing database-nolet database"
          fi
      
          echo "Database ID: $DB_ID"
          echo "DB_ID=$DB_ID" >> $GITHUB_ENV
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}

      - name: Update wrangler.toml
        run: |
          sed -i 's/"database_id": ".*"/"database_id": "'$DB_ID'"/' wrangler.json

      - name: Deploy worker
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ inputs.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
          command: "deploy"
          wranglerVersion: "4.16.1"